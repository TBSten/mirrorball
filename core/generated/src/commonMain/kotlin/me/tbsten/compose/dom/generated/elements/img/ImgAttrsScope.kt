// THIS FILE IS AUTO GENERATED .
// DO NOT EDIT THIS FILE .
@file:Suppress(
  "PackageDirectoryMismatch",
  "unused",
)

package me.tbsten.compose.dom.elements

import kotlin.Boolean
import kotlin.Float
import kotlin.Int
import kotlin.String
import kotlin.Suppress
import me.tbsten.compose.dom.HtmlTagRef
import me.tbsten.compose.dom.attributes.AttrsScope
import me.tbsten.compose.dom.attributes.attr

public class ImgAttrsScope(
  ref: HtmlTagRef,
) : AttrsScope(ref)

public fun ImgAttrsScope.alt(alt: String) {
  attr("alt", alt)
}

public fun ImgAttrsScope.crossOrigin(crossOrigin: ImgCrossOrigin) {
  attr("crossorigin", crossOrigin.enumValue)
}

public enum class ImgCrossOrigin(
  public val enumValue: String,
) {
  Anonymous("anonymous"),
  UseCredentials("use-credentials"),
  ;
}

public fun ImgAttrsScope.decoding(decoding: ImgDecoding) {
  attr("decoding", decoding.enumValue)
}

public enum class ImgDecoding(
  public val enumValue: String,
) {
  Async("async"),
  Sync("sync"),
  Auto("auto"),
  ;
}

public fun ImgAttrsScope.elementTiming(elementTiming: String) {
  attr("elementtiming", elementTiming)
}

public fun ImgAttrsScope.fetchpriority(fetchpriority: ImgFetchpriority) {
  attr("fetchpriority", fetchpriority.enumValue)
}

public enum class ImgFetchpriority(
  public val enumValue: String,
) {
  High("high"),
  Low("low"),
  Auto("auto"),
  ;
}

public fun ImgAttrsScope.height(height: Int) {
  attr("height", height)
}

public fun ImgAttrsScope.height(height: Float) {
  attr("height", height)
}

public fun ImgAttrsScope.ismap(ismap: Boolean) {
  attr("ismap", ismap)
}

public fun ImgAttrsScope.loading(loading: ImgLoading) {
  attr("loading", loading.enumValue)
}

public enum class ImgLoading(
  public val enumValue: String,
) {
  Eager("eager"),
  Lazy("lazy"),
  ;
}

public fun ImgAttrsScope.referrerPolicy(referrerPolicy: ImgReferrerPolicy) {
  attr("referrerpolicy", referrerPolicy.enumValue)
}

public enum class ImgReferrerPolicy(
  public val enumValue: String,
) {
  NoReferrer("no-referrer"),
  NoReferrerWHenDowngrade("no-referrer-when-downgrade"),
  Origin("origin"),
  OriginWhenCrossOrigin("origin-when-cross-origin"),
  SameOrigin("same-origin"),
  StrictOrigin("strict-origin"),
  StrictOriginWhenCrossOrigin("strict-origin-when-cross-origin"),
  UnsafeUrl("unsafe-url"),
  ;
}

public fun ImgAttrsScope.sizes(sizes: String) {
  attr("sizes", sizes)
}

public fun ImgAttrsScope.src(src: String) {
  attr("src", src)
}

public fun ImgAttrsScope.srcSet(srcSet: String) {
  attr("srcset", srcSet)
}

public fun ImgAttrsScope.width(width: Int) {
  attr("width", width)
}

public fun ImgAttrsScope.width(width: Float) {
  attr("width", width)
}

public fun ImgAttrsScope.useMap(useMap: String) {
  attr("usemap", useMap)
}
