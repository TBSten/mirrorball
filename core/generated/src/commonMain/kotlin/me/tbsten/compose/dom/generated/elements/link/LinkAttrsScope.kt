// THIS FILE IS AUTO GENERATED .
// DO NOT EDIT THIS FILE .
@file:Suppress(
  "PackageDirectoryMismatch",
  "unused",
)

package me.tbsten.compose.dom.elements

import kotlin.Boolean
import kotlin.String
import kotlin.Suppress
import me.tbsten.compose.dom.HtmlTagRef
import me.tbsten.compose.dom.attributes.AttrsScope
import me.tbsten.compose.dom.attributes.attr

public class LinkAttrsScope(
  ref: HtmlTagRef,
) : AttrsScope(ref)

public fun LinkAttrsScope.htmlAs(htmlAs: LinkHtmlAs) {
  attr("as", htmlAs.enumValue)
}

public enum class LinkHtmlAs(
  public val enumValue: String,
) {
  Audio("audio"),
  Document("document"),
  Embed("embed"),
  Fetch("fetch"),
  Font("font"),
  Image("image"),
  Object("object"),
  Script("script"),
  Style("style"),
  Track("track"),
  Video("video"),
  Worker("worker"),
  ;
}

public fun LinkAttrsScope.crossOrigin(crossOrigin: LinkCrossOrigin) {
  attr("crossorigin", crossOrigin.enumValue)
}

public enum class LinkCrossOrigin(
  public val enumValue: String,
) {
  Anonymous("anonymous"),
  UseCredentials("use-credentials"),
  ;
}

public fun LinkAttrsScope.disabled(disabled: Boolean) {
  attr("disabled", disabled)
}

public fun LinkAttrsScope.fetchPriority(fetchPriority: LinkFetchPriority) {
  attr("fetchpriority", fetchPriority.enumValue)
}

public enum class LinkFetchPriority(
  public val enumValue: String,
) {
  High("high"),
  Low("low"),
  Auto("auto"),
  ;
}

public fun LinkAttrsScope.href(href: String) {
  attr("href", href)
}

public fun LinkAttrsScope.hreflang(hreflang: String) {
  attr("HrefLang", hreflang)
}

public fun LinkAttrsScope.imagesizes(imagesizes: String) {
  attr("ImageSizes", imagesizes)
}

public fun LinkAttrsScope.imagesrcset(imagesrcset: String) {
  attr("ImageSrcSet", imagesrcset)
}

public fun LinkAttrsScope.integrity(integrity: String) {
  attr("integrity", integrity)
}

public fun LinkAttrsScope.media(media: String) {
  attr("media", media)
}

public fun LinkAttrsScope.referrerPolicy(referrerPolicy: LinkReferrerPolicy) {
  attr("referrerpolicy", referrerPolicy.enumValue)
}

public enum class LinkReferrerPolicy(
  public val enumValue: String,
) {
  NoReferrer("no-referrer"),
  NoReferrerWHenDowngrade("no-referrer-when-downgrade"),
  Origin("origin"),
  OriginWhenCrossOrigin("origin-when-cross-origin"),
  SameOrigin("same-origin"),
  StrictOrigin("strict-origin"),
  StrictOriginWhenCrossOrigin("strict-origin-when-cross-origin"),
  UnsafeUrl("unsafe-url"),
  ;
}

public fun LinkAttrsScope.rel(rel: String) {
  attr("rel", rel)
}

public fun LinkAttrsScope.sizes(sizes: String) {
  attr("sizes", sizes)
}

public fun LinkAttrsScope.title(title: String) {
  attr("title", title)
}

public fun LinkAttrsScope.type(type: String) {
  attr("type", type)
}
