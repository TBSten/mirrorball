// THIS FILE IS AUTO GENERATED .
// DO NOT EDIT THIS FILE .
@file:Suppress(
  "PackageDirectoryMismatch",
  "unused",
)

package me.tbsten.compose.dom.elements

import kotlin.Boolean
import kotlin.String
import kotlin.Suppress
import me.tbsten.compose.dom.HtmlTagRef
import me.tbsten.compose.dom.attributes.AttrsScope
import me.tbsten.compose.dom.attributes.attr

public class ButtonAttrsScope(
  ref: HtmlTagRef,
) : AttrsScope(ref)

public fun ButtonAttrsScope.autoFocus(autoFocus: Boolean) {
  attr("autofocus", autoFocus)
}

public fun ButtonAttrsScope.disabled(disabled: Boolean) {
  attr("disabled", disabled)
}

public fun ButtonAttrsScope.form(form: String) {
  attr("form", form)
}

public fun ButtonAttrsScope.formAction(formAction: String) {
  attr("formaction", formAction)
}

public fun ButtonAttrsScope.formEncType(formEncType: ButtonFormEncType) {
  attr("formenctype", formEncType.enumValue)
}

public enum class ButtonFormEncType(
  public val enumValue: String,
) {
  ApplicationXWwwFormUrlEncoded("application/x-www-form-urlencoded"),
  MultipartFormData("multipart/form-data"),
  TextPlain("text/plain"),
  ;
}

public fun ButtonAttrsScope.formMethod(formMethod: ButtonFormMethod) {
  attr("formmethod", formMethod.enumValue)
}

public enum class ButtonFormMethod(
  public val enumValue: String,
) {
  Get("get"),
  Post("post"),
  Dialog("dialog"),
  ;
}

public fun ButtonAttrsScope.formNoValidate(formNoValidate: Boolean) {
  attr("formnovalidate", formNoValidate)
}

public fun ButtonAttrsScope.formTarget(formTarget: String) {
  attr("formtarget", formTarget)
}

public fun ButtonAttrsScope.formTarget(formTarget: ButtonFormTarget) {
  attr("formtarget", formTarget.enumValue)
}

public enum class ButtonFormTarget(
  public val enumValue: String,
) {
  Self("_self"),
  Blank("_blank"),
  Parent("_parent"),
  Top("_top"),
  ;
}

public fun ButtonAttrsScope.name(name: String) {
  attr("name", name)
}

public fun ButtonAttrsScope.popoverTarget(popoverTarget: String) {
  attr("popovertarget", popoverTarget)
}

public fun ButtonAttrsScope.popoverTargetAction(popoverTargetAction: ButtonPopoverTargetAction) {
  attr("popovertargetaction", popoverTargetAction.enumValue)
}

public enum class ButtonPopoverTargetAction(
  public val enumValue: String,
) {
  Hide("hide"),
  Show("show"),
  Toggle("toggle"),
  ;
}

public fun ButtonAttrsScope.type(type: ButtonType) {
  attr("type", type.enumValue)
}

public enum class ButtonType(
  public val enumValue: String,
) {
  Submit("submit"),
  Reset("reset"),
  Button("button"),
  ;
}

public fun ButtonAttrsScope.`value`(`value`: String) {
  attr("value", value)
}
