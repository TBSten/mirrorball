// THIS FILE IS AUTO GENERATED .
// DO NOT EDIT THIS FILE .
@file:Suppress(
  "PackageDirectoryMismatch",
  "unused",
)

package me.tbsten.compose.dom.attributes

import kotlin.Boolean
import kotlin.Float
import kotlin.Int
import kotlin.String
import kotlin.Suppress

public fun AttrsScope.role(role: String) {
  attr("role", role)
}

public fun AttrsScope.accessKey(accessKey: String) {
  attr("accesskey", accessKey)
}

public fun AttrsScope.autoComplete(autoComplete: AutoComplete) {
  attr("autocomplete", autoComplete.enumValue)
}

public enum class AutoComplete(
  public val enumValue: String,
) {
  Off("off"),
  On("on"),
  Name("name"),
  HonorificPrefix("honorific-prefix"),
  GivenName("given-name"),
  AdditionalName("additional-name"),
  FamilyName("family-name"),
  HonorificSuffix("honorific-suffix"),
  Nickname("nickname"),
  Email("email"),
  Username("username"),
  NewPassword("new-password"),
  CurrentPassword("current-password"),
  OneTimeCode("one-time-code"),
  OrganizationTitle("organization-title"),
  Organization("organization"),
  StreetAddress("street-address"),
  Shipping("shipping"),
  Billing("billing"),
  AddressLine1("address-line1"),
  AddressLine2("address-line2"),
  AddressLine3("address-line3"),
  AddressLevel4("address-level4"),
  AddressLevel3("address-level3"),
  AddressLevel2("address-level2"),
  AddressLevel1("address-level1"),
  Country("country"),
  CountryName("country-name"),
  PostalCode("postal-code"),
  CcName("cc-name"),
  CcGivenName("cc-given-name"),
  CcAdditionalName("cc-additional-name"),
  CcFamilyName("cc-family-name"),
  CcNumber("cc-number"),
  CcExp("cc-exp"),
  CcExpMonth("cc-exp-month"),
  CcExpYear("cc-exp-year"),
  CcCsc("cc-csc"),
  CcType("cc-type"),
  TransactionCurrency("transaction-currency"),
  TransactionAmount("transaction-amount"),
  Language("language"),
  Bday("bday"),
  BdayDay("bday-day"),
  BdayMonth("bday-month"),
  BdayYear("bday-year"),
  Sex("sex"),
  Tel("tel"),
  TelCountryCode("tel-country-code"),
  TelNational("tel-national"),
  TelAreaCode("tel-area-code"),
  TelLocal("tel-local"),
  TelExtension("tel-extension"),
  Impp("impp"),
  Url("url"),
  Photo("photo"),
  Webauthn("webauthn"),
  ;
}

public fun AttrsScope.autoFocus(autoFocus: Boolean) {
  attr("autofocus", autoFocus)
}

public fun AttrsScope.className(className: String) {
  attr("class", className)
}

public fun AttrsScope.contentEditable(contentEditable: ContentEditable) {
  attr("contenteditable", contentEditable.enumValue)
}

public enum class ContentEditable(
  public val enumValue: String,
) {
  True("true"),
  False("false"),
  ;
}

public fun AttrsScope.dir(dir: Dir) {
  attr("dir", dir.enumValue)
}

public enum class Dir(
  public val enumValue: String,
) {
  Ltr("ltr"),
  Rtl("rtl"),
  ;
}

public fun AttrsScope.draggable(draggable: Draggable) {
  attr("draggable", draggable.enumValue)
}

public enum class Draggable(
  public val enumValue: String,
) {
  True("true"),
  False("false"),
  ;
}

public fun AttrsScope.draggable(draggable: Boolean) {
  attr("draggable", draggable)
}

public fun AttrsScope.enterKeyHint(enterKeyHint: String) {
  attr("enterkeyhint", enterKeyHint)
}

public fun AttrsScope.exportParts(exportParts: String) {
  attr("exportparts", exportParts)
}

public fun AttrsScope.hidden(hidden: Boolean) {
  attr("hidden", hidden)
}

public fun AttrsScope.id(id: String) {
  attr("id", id)
}

public fun AttrsScope.inert(inert: Boolean) {
  attr("inert", inert)
}

public fun AttrsScope.inputMode(inputMode: InputMode) {
  attr("inputmode", inputMode.enumValue)
}

public enum class InputMode(
  public val enumValue: String,
) {
  None("none"),
  Text("text"),
  Decimal("decimal"),
  Numeric("numeric"),
  Tel("tel"),
  Search("search"),
  Email("email"),
  Url("url"),
  ;
}

public fun AttrsScope.htmlIs(htmlIs: String) {
  attr("is", htmlIs)
}

public fun AttrsScope.itemid(itemid: String) {
  attr("itemid", itemid)
}

public fun AttrsScope.itemProp(itemProp: String) {
  attr("itemprop", itemProp)
}

public fun AttrsScope.itemRef(itemRef: String) {
  attr("itemref", itemRef)
}

public fun AttrsScope.itemScope(itemScope: String) {
  attr("itemscope", itemScope)
}

public fun AttrsScope.itemType(itemType: String) {
  attr("itemtype", itemType)
}

public fun AttrsScope.lang(lang: String) {
  attr("lang", lang)
}

public fun AttrsScope.nonce(nonce: String) {
  attr("nonce", nonce)
}

public fun AttrsScope.part(part: String) {
  attr("part", part)
}

public fun AttrsScope.popover(popover: String) {
  attr("popover", popover)
}

public fun AttrsScope.slot(slot: String) {
  attr("slot", slot)
}

public fun AttrsScope.spellCheck(spellCheck: SpellCheck) {
  attr("spellcheck", spellCheck.enumValue)
}

public enum class SpellCheck(
  public val enumValue: String,
) {
  True("true"),
  False("false"),
  ;
}

public fun AttrsScope.tabIndex(tabIndex: Int) {
  attr("tabindex", tabIndex)
}

public fun AttrsScope.tabIndex(tabIndex: Float) {
  attr("tabindex", tabIndex)
}

public fun AttrsScope.title(title: String) {
  attr("title", title)
}

public fun AttrsScope.translate(translate: Translate) {
  attr("translate", translate.enumValue)
}

public enum class Translate(
  public val enumValue: String,
) {
  Yes("yes"),
  No("no"),
  ;
}
