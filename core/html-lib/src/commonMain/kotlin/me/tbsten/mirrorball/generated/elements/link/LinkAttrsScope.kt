// THIS FILE IS AUTO GENERATED .
// DO NOT EDIT THIS FILE .
@file:Suppress(
    "PackageDirectoryMismatch",
    "unused",
)

package me.tbsten.mirrorball.elements

import me.tbsten.mirrorball.HtmlTagRef
import me.tbsten.mirrorball.attributes.AttrsScope
import me.tbsten.mirrorball.attributes.attr
import kotlin.Boolean
import kotlin.String
import kotlin.Suppress

class LinkAttrsScope(
    ref: HtmlTagRef,
) : AttrsScope(ref)

fun LinkAttrsScope.htmlAs(htmlAs: LinkHtmlAs) {
    attr("as", htmlAs.enumValue)
}

enum class LinkHtmlAs(
    val enumValue: String,
) {
    Audio("audio"),
    Document("document"),
    Embed("embed"),
    Fetch("fetch"),
    Font("font"),
    Image("image"),
    Object("object"),
    Script("script"),
    Style("style"),
    Track("track"),
    Video("video"),
    Worker("worker"),
}

fun LinkAttrsScope.crossOrigin(crossOrigin: LinkCrossOrigin) {
    attr("crossorigin", crossOrigin.enumValue)
}

enum class LinkCrossOrigin(
    val enumValue: String,
) {
    Anonymous("anonymous"),
    UseCredentials("use-credentials"),
}

fun LinkAttrsScope.disabled(disabled: Boolean) {
    attr("disabled", disabled)
}

fun LinkAttrsScope.fetchPriority(fetchPriority: LinkFetchPriority) {
    attr("fetchpriority", fetchPriority.enumValue)
}

enum class LinkFetchPriority(
    val enumValue: String,
) {
    High("high"),
    Low("low"),
    Auto("auto"),
}

fun LinkAttrsScope.href(href: String) {
    attr("href", href)
}

fun LinkAttrsScope.hreflang(hreflang: String) {
    attr("HrefLang", hreflang)
}

fun LinkAttrsScope.imagesizes(imagesizes: String) {
    attr("ImageSizes", imagesizes)
}

fun LinkAttrsScope.imagesrcset(imagesrcset: String) {
    attr("ImageSrcSet", imagesrcset)
}

fun LinkAttrsScope.integrity(integrity: String) {
    attr("integrity", integrity)
}

fun LinkAttrsScope.media(media: String) {
    attr("media", media)
}

fun LinkAttrsScope.referrerPolicy(referrerPolicy: LinkReferrerPolicy) {
    attr("referrerpolicy", referrerPolicy.enumValue)
}

enum class LinkReferrerPolicy(
    val enumValue: String,
) {
    NoReferrer("no-referrer"),
    NoReferrerWHenDowngrade("no-referrer-when-downgrade"),
    Origin("origin"),
    OriginWhenCrossOrigin("origin-when-cross-origin"),
    SameOrigin("same-origin"),
    StrictOrigin("strict-origin"),
    StrictOriginWhenCrossOrigin("strict-origin-when-cross-origin"),
    UnsafeUrl("unsafe-url"),
}

fun LinkAttrsScope.rel(rel: String) {
    attr("rel", rel)
}

fun LinkAttrsScope.sizes(sizes: String) {
    attr("sizes", sizes)
}

fun LinkAttrsScope.title(title: String) {
    attr("title", title)
}

fun LinkAttrsScope.type(type: String) {
    attr("type", type)
}
