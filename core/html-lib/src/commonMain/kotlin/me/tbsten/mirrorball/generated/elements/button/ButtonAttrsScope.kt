// THIS FILE IS AUTO GENERATED .
// DO NOT EDIT THIS FILE .
@file:Suppress(
    "PackageDirectoryMismatch",
    "unused",
)

package me.tbsten.mirrorball.elements

import me.tbsten.mirrorball.HtmlTagRef
import me.tbsten.mirrorball.attributes.AttrsScope
import me.tbsten.mirrorball.attributes.attr
import kotlin.Boolean
import kotlin.String
import kotlin.Suppress

class ButtonAttrsScope(
    ref: HtmlTagRef,
) : AttrsScope(ref)

fun ButtonAttrsScope.autoFocus(autoFocus: Boolean) {
    attr("autofocus", autoFocus)
}

fun ButtonAttrsScope.disabled(disabled: Boolean) {
    attr("disabled", disabled)
}

fun ButtonAttrsScope.form(form: String) {
    attr("form", form)
}

fun ButtonAttrsScope.formAction(formAction: String) {
    attr("formaction", formAction)
}

fun ButtonAttrsScope.formEncType(formEncType: ButtonFormEncType) {
    attr("formenctype", formEncType.enumValue)
}

enum class ButtonFormEncType(
    val enumValue: String,
) {
    ApplicationXWwwFormUrlEncoded("application/x-www-form-urlencoded"),
    MultipartFormData("multipart/form-data"),
    TextPlain("text/plain"),
}

fun ButtonAttrsScope.formMethod(formMethod: ButtonFormMethod) {
    attr("formmethod", formMethod.enumValue)
}

enum class ButtonFormMethod(
    val enumValue: String,
) {
    Get("get"),
    Post("post"),
    Dialog("dialog"),
}

fun ButtonAttrsScope.formNoValidate(formNoValidate: Boolean) {
    attr("formnovalidate", formNoValidate)
}

fun ButtonAttrsScope.formTarget(formTarget: String) {
    attr("formtarget", formTarget)
}

fun ButtonAttrsScope.formTarget(formTarget: ButtonFormTarget) {
    attr("formtarget", formTarget.enumValue)
}

enum class ButtonFormTarget(
    val enumValue: String,
) {
    Self("_self"),
    Blank("_blank"),
    Parent("_parent"),
    Top("_top"),
}

fun ButtonAttrsScope.name(name: String) {
    attr("name", name)
}

fun ButtonAttrsScope.popoverTarget(popoverTarget: String) {
    attr("popovertarget", popoverTarget)
}

fun ButtonAttrsScope.popoverTargetAction(popoverTargetAction: ButtonPopoverTargetAction) {
    attr("popovertargetaction", popoverTargetAction.enumValue)
}

enum class ButtonPopoverTargetAction(
    val enumValue: String,
) {
    Hide("hide"),
    Show("show"),
    Toggle("toggle"),
}

fun ButtonAttrsScope.type(type: ButtonType) {
    attr("type", type.enumValue)
}

enum class ButtonType(
    val enumValue: String,
) {
    Submit("submit"),
    Reset("reset"),
    Button("button"),
}

fun ButtonAttrsScope.`value`(`value`: String) {
    attr("value", value)
}
