package me.tbsten.mirrorball.generate

import com.squareup.kotlinpoet.AnnotationSpec
import com.squareup.kotlinpoet.FileSpec
import com.squareup.kotlinpoet.FileSpec.Builder
import java.io.File
import java.util.Locale

fun upperCamelCase2KebabCase(string: String): String =
    string
        .replace(Regex("([a-z])([A-Z])")) { "${it.groupValues[1]}-${it.groupValues[2]}" }
        .lowercase()

fun kebabCase2UpperCamelCase(input: String): String =
    input
        .split("-") // "-" で文字列を分割
        .joinToString("") { word ->
            word.replaceFirstChar { it.uppercase() } // 各単語の最初の文字を大文字に
        }

fun kebabCase2LowerCamelCase(input: String): String =
    input
        .split("-")
        .mapIndexed { index, word ->
            if (index == 0) {
                word.lowercase()
            } else {
                word.replaceFirstChar {
                    if (it.isLowerCase()) {
                        it.titlecase(
                            Locale.getDefault(),
                        )
                    } else {
                        it.toString()
                    }
                }
            }
        }.joinToString("")

fun lowerCamelCase2UpperCamelCase(value: String): String = value[0].uppercase() + if (value.length >= 2) value.slice(1..<value.length) else ""

fun upperCamelCase2LowerCamelCase(input: String): String = input.replaceFirstChar { it.lowercase() }

fun File.cleanAndMkdir() {
    if (exists()) deleteRecursively()
    mkdirs()
}

fun autoGenerateFileSpecBuilder(
    packageName: String,
    fileName: String,
): Builder =
    FileSpec
        .builder(packageName, fileName)
        .addAnnotation(
            AnnotationSpec
                .builder(Suppress::class)
                .addMember("\"PackageDirectoryMismatch\"")
                .addMember("\"unused\"")
                .build(),
        ).addFileComment(
            """
            THIS FILE IS AUTO GENERATED .
            DO NOT EDIT THIS FILE .
            """.trimIndent(),
        )

fun autoGenerateFileSpecBuilder(fileName: String) = autoGenerateFileSpecBuilder(LibraryPackageName, fileName)
